/*
 * Copyright 2018 NEM
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * NIS2 API
 * This document defines all the nis2 api routes and behaviour
 *
 * OpenAPI spec version: 1.0.0
 * Contact: guillemchain@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.nem.sdk.infrastructure;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * MosaicInfoDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-19T19:07:40.115Z")
class MosaicInfoDTO {
    @SerializedName("meta")
    private NamespaceMosaicMetaDTO meta = null;

    @SerializedName("mosaic")
    private MosaicDefinitionDTO mosaic = null;

    public MosaicInfoDTO meta(NamespaceMosaicMetaDTO meta) {
        this.meta = meta;
        return this;
    }

    /**
     * Get meta
     *
     * @return meta
     **/
    @ApiModelProperty(required = true, value = "")
    public NamespaceMosaicMetaDTO getMeta() {
        return meta;
    }

    public void setMeta(NamespaceMosaicMetaDTO meta) {
        this.meta = meta;
    }

    public MosaicInfoDTO mosaic(MosaicDefinitionDTO mosaic) {
        this.mosaic = mosaic;
        return this;
    }

    /**
     * Get mosaic
     *
     * @return mosaic
     **/
    @ApiModelProperty(required = true, value = "")
    public MosaicDefinitionDTO getMosaic() {
        return mosaic;
    }

    public void setMosaic(MosaicDefinitionDTO mosaic) {
        this.mosaic = mosaic;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        MosaicInfoDTO mosaicInfoDTO = (MosaicInfoDTO) o;
        return Objects.equals(this.meta, mosaicInfoDTO.meta) &&
                Objects.equals(this.mosaic, mosaicInfoDTO.mosaic);
    }

    @Override
    public int hashCode() {
        return Objects.hash(meta, mosaic);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class MosaicInfoDTO {\n");

        sb.append("    meta: ").append(toIndentedString(meta)).append("\n");
        sb.append("    mosaic: ").append(toIndentedString(mosaic)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

